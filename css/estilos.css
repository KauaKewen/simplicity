@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Raleway:ital,wght@0,100..900;1,100..900&display=swap');

* {
    box-sizing: border-box;
}

:root {
    --cor-titulo: #4d4d4d;
    --cor-texto: #333;
    --cor-escura: #000;
    --cor-clara : #fff;
    --cor-intermediaria: #ececec;
}
/* colcoar o font-size para usar como lembrete que por padrão, 1rem equivale a 16px */
html { font-size: 16px; }

body {
    color: var(--cor-texto);
    font-family: 'Noto Sans', sans-serif;
    background-color: var(--cor-clara);
}

body, h1, h2, p, figure, nav ul {
    margin: 0;
    padding: 0;
}

img {
    max-width: 100%;
}

a {
    text-decoration: none;
}

h1 {
    font-family: Raleway, sans-serif;
    text-transform: uppercase;
    font-weight: 800;
    font-size: 1.5rem;
}

h1 a {
    color: var(--cor-clara);
    background-color: var(--cor-escura);
    padding: 0.3rem 1rem;
    border-radius: 6px;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 12vh;
}

nav h2 a {
    color: var(--cor-escura);
    font-size: 1.2rem;
    /* background-color: yellow; */
    padding: 1rem;
    display: inline-block;
}

nav h2 a:hover, nav h2 a:focus, .links-menu a:hover, .links-menu a:focus {
    background-color: var(--cor-intermediaria);
}
/* Estilos para a lista ul contida no nav */
.links-menu  {
    list-style: none;
    /* Atenção: neste ponto, fazemos com que os links do menu iniciem escondidos (display: none;). Posteriormente, com a ajdua do CSS combinado com JS, faremos os controles para exibir/esconder de forma alterada */
    display: none;
}
/* Estilos para os links contidos na ul dentro do nav */
.links-menu a {
    color: var(--cor-escura);
    font-weight: bold;
    display: flex;
    height: 50px;
    /* background-color: yellow; */
    justify-content: center;
    align-items: center;
}


/* Regra que será aplicada somente quando o menu for acionado para abertura */

.links-menu.aberto {
    /* Ativando o flex, fazemos com que os links voltem a aparecer. */
    display: flex;

    /* fazemos com que eles fiquem um em cima do outro (flex column "coluna flexível") */
    flex-direction: column;

    /* Ativamos position:absolute e ajustamos a posição final dos links usando propriedades de coordenadas */
    position: absolute;
    left: 0;
    right: 0;
    background-color: var(--cor-clara);
}

/* Exercícios
1) Crie uma regra CSS para formatar o destaque com as seguintes configurações:

-Altura 500px
-Imagem de fundo (fundo-destaque)
-Imagem de fundo deve ficar parada
-flex com alinhamento totalmente centralizado, e um elemento em cima do outro (ou seja, use o modo coluna)

2) Crie uma regra CSS para formatar o h2 e o p contidos em Destaque. Faça com que os textos fiquem centralizados (text-align) e com cor clara.*/

.destaque {
    height: 88vh;
    background-image: url(../imagens/fundo-destaque.jpg);
    background-attachment: fixed;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.destaque h2, .destaque p {
    text-align: center;
    color: var(--cor-clara);

    /* Etapa 2) aplicar a animação */
    animation: animaDestaque;
    animation-duration: 7s;
}

/* Sobre a função clamp()
Função útil para redimensionamento responsivo de acordo com certos critérios.

clamp(
    tamanhoMínimo,
    tamanhoIdeal/ Variável/ Responsivo
    tamanhoMáximo
)*/

.destaque h2 {
    font-size: clamp(3rem, 10vw, 7rem);
}

.destaque p {
    font-size: clamp(1.5rem, 4vw, 3rem);
}

/* Etapa 1) Regra de animação */

@keyframes animaDestaque {

/* Dê (estado inicial, como começa) */

    from {
        opacity: 0;
        transform: translateY(-300px);
    }

/* Para (estado final, como termina */
    
    to {
        opacity: 1;
    }
}